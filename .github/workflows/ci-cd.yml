name: Deploy ShoeSpectra to AWS

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Create .env file
        run: |
          echo "DB_HOST=${{ secrets.DB_HOST }}" >> .env
          echo "DB_NAME=${{ secrets.DB_NAME }}" >> .env
          echo "DB_USER=${{ secrets.DB_USER }}" >> .env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
          echo "DB_PORT=${{ secrets.DB_PORT }}" >> .env
          echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> .env

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/shoespectra:latest -f ./shoe_spectra/Dockerfile ./shoe_spectra/
          docker push ${{ secrets.DOCKER_USERNAME }}/shoespectra:latest

      - name: Deploy to AWS EC2
        env:
          AWS_IP: ${{ secrets.AWS_IP }}
          AWS_USERNAME: ${{ secrets.AWS_USERNAME }}
          AWS_KEY: ${{ secrets.AWS_KEY }}

        run: |
          echo "$AWS_KEY" > aws_key.pem
          chmod 600 aws_key.pem

          scp -o StrictHostKeyChecking=no -i aws_key.pem .env "$AWS_USERNAME@$AWS_IP:/home/$AWS_USERNAME/.env"

          ssh -o StrictHostKeyChecking=no -i aws_key.pem "$AWS_USERNAME@$AWS_IP" << EOF
          set -e

          echo "Logging into Docker..."
          echo "${{ secrets.DOCKER_PASSWORD }}" | sudo docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

          echo "Stopping and removing old containers..."
          docker rm -f shoespectra || true
          docker rm -f db || true

          echo "Pulling latest Docker image..."
          docker pull ${{ secrets.DOCKER_USERNAME }}/shoespectra:latest

          echo "Starting database container..."
          docker run -d \
            --name db \
            -e POSTGRES_DB=${{ secrets.DB_NAME }} \
            -e POSTGRES_USER=${{ secrets.DB_USER }} \
            -e POSTGRES_PASSWORD=${{ secrets.DB_PASSWORD }} \
            -p 5432:5432 \
            --restart unless-stopped \
            postgres:latest

          echo "Starting ShoeSpectra container..."
          docker run -d \
            --name shoespectra \
            -p 8000:8000 \
            --env-file /home/$AWS_USERNAME/.env \
            --restart unless-stopped \
            ${{ secrets.DOCKER_USERNAME }}/shoespectra:latest

          echo "Deployment Completed!"
          EOF


